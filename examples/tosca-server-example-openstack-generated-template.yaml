node_templates:
  testing_tosca_security_group:
    properties:
      name: testing_tosca_security_group
    type: openstack.nodes.SecurityGroup
  testing_tosca_security_group_rule:
    attributes:
      direction: ingress
      port_range_max: '{{ testing_tosca_ports[item | int] | default(omit) }}'
      port_range_min: '{{ testing_tosca_ports[item | int] | default(omit) }}'
      protocol: '{{ testing_tosca_protocols[item | int] | default(omit) }}'
      remote_ip_prefix: 0.0.0.0
    interfaces:
      Prepare:
        preconfigure:
          implementation:
          - testing_tosca_ansible_set_fact_4261.yaml
          - testing_tosca_ansible_set_fact_7198.yaml
    requirements:
    - security_group: testing_tosca_security_group
    type: openstack.nodes.SecurityGroupRule
  testing_tosca_server:
    properties:
      name: '{{ item }}'
      nics:
      - net-name: test-two-routers
    requirements:
    - flavor:
        node_filter:
          properties:
          - vcpus: 1
          - disk: 5.0
          - ram: 1024.0
    - security_groups: testing_tosca_security_group
    - image:
        node_filter:
          properties:
          - name:
              get_operation_output:
              - testing_tosca_server_name
              - Target
              - choose_os_image_facts_ansible_facts_openstack_image
              - name
    type: openstack.nodes.Server
relationship_templates:
  testing_tosca_server_name:
    interfaces:
      Target:
        choose_os_image_facts_ansible_facts_openstack_image:
          implementation:
          - contains.yaml
          - testing_tosca_ansible_set_fact_6418.yaml
          inputs:
            input_args:
            - - name
              - properties
            - architecture: x86_64
              distribution: xenial
              type: ubuntu
              version: 16.04
            input_facts:
              get_operation_output:
              - SELF
              - Target
              - total_os_image_facts_ansible_facts_openstack_image
              - target_objects
        total_os_image_facts_ansible_facts_openstack_image:
          implementation:
          - testing_tosca_ansible_os_image_facts_3874.yaml
          - testing_tosca_ansible_set_fact_5892.yaml
    type: openstack.relationships.DependsOn

- hosts: localhost
  name: Create openstack cluster
  tasks:
  - os_image_facts: {}
    register: facts_result
  - register: tmp_value
    set_fact:
      target_objects: '{{ facts_result["ansible_facts"]["openstack_image"] }}'
  - set_fact:
      target_objects_4429: '{{ target_objects }}'
  - set_fact:
      input_facts: '{{ target_objects_4429 }}'
  - set_fact:
      input_args_5776:
      - - name
        - properties
      - architecture: x86_64
        distribution: xenial
        type: ubuntu
        version: 16.04
  - set_fact:
      input_args: '{{ input_args_5776 }}'
  - include: /home/user/git/clouni/artifacts/contains.yaml
  - register: tmp_value
    set_fact:
      name: '{{ matched_object["name"] }}'
  - set_fact:
      name_7073: '{{ name }}'
  - file:
      path: '{{ playbook_dir }}/id_vars_test.yaml'
      state: absent
  - file:
      path: '{{ playbook_dir }}/id_vars_test.yaml'
      state: touch
  - name: Create OpenStack component security group
    os_security_group:
      name: testing_tosca_security_group
    register: testing_tosca_security_group
  - lineinfile:
      line: 'testing_tosca_security_group: {{ testing_tosca_security_group.id }}'
      path: '{{ playbook_dir }}/id_vars_test.yaml'
    when: testing_tosca_security_group.id is defined
  - fail:
      msg: Variable testing_tosca_security_group.id is undefined! So it will not be
        deleted
    ignore_errors: true
    when: testing_tosca_security_group.id is undefined
  - register: tmp
    set_fact:
      testing_tosca_protocols:
      - tcp
  - register: tmp
    set_fact:
      testing_tosca_ports:
      - 22
  - name: Create OpenStack component security group rule
    os_security_group_rule:
      direction: ingress
      port_range_max: '{{ testing_tosca_ports[item | int] | default(omit) }}'
      port_range_min: '{{ testing_tosca_ports[item | int] | default(omit) }}'
      protocol: '{{ testing_tosca_protocols[item | int] | default(omit) }}'
      remote_ip_prefix: 0.0.0.0
      security_group: testing_tosca_security_group
    register: testing_tosca_security_group_rule
    with_sequence: start=0 end={{ [testing_tosca_protocols | length, testing_tosca_ports
      | length] | max - 1 }} format=%d
  - lineinfile:
      line: 'testing_tosca_security_group_rule: {{ testing_tosca_security_group_rule.id
        }}'
      path: '{{ playbook_dir }}/id_vars_test.yaml'
    when: testing_tosca_security_group_rule.id is defined
  - fail:
      msg: Variable testing_tosca_security_group_rule.id is undefined! So it will
        not be deleted
    ignore_errors: true
    when: testing_tosca_security_group_rule.id is undefined
  - os_flavor_facts: {}
    register: node_filter_facts_raw
  - set_fact:
      input_facts: '{{ node_filter_facts_raw["ansible_facts"]["openstack_flavors"]
        }}'
  - set_fact:
      input_args:
        disk: 5.0
        ram: 1024.0
        vcpus: 1
  - include: /home/user/git/clouni/artifacts/equals.yaml
  - set_fact:
      id_5106: '{{ matched_object["id"] }}'
  - name: Create OpenStack component server
    os_server:
      config_drive: false
      flavor: '{{ id_5106 }}'
      image: '{{ name_7073 }}'
      name: '{{ item }}'
      nics:
      - net-name: test-two-routers
      security_groups:
      - testing_tosca_security_group
    register: testing_tosca_server
    with_sequence: start=1 end=2 format=testing_tosca-%d
  - lineinfile:
      line: 'testing_tosca_server: {{ testing_tosca_server.id }}'
      path: '{{ playbook_dir }}/id_vars_test.yaml'
    when: testing_tosca_server.id is defined
  - fail:
      msg: Variable testing_tosca_server.id is undefined! So it will not be deleted
    ignore_errors: true
    when: testing_tosca_server.id is undefined
